ext {
    compileSdkVersion = 28
    buildToolsVersion = '28.0.0'
    minSdkVersion = 18
    targetSdkVersion = 28
    versionName = "1.0.0"
    versionCode = Integer.parseInt(new Date().format("yyyyMMdd"))
}
File configFile = file(new File('config.gradle'))

if (configFile.isFile()) {
    apply from: "config.gradle"
    println "I have config"
} else {
    println "I have no config"
    ext {
        istest = false // true：可以切换，false：不可以切换
        channel = "neibu" // 渠道名：
        isRelease = false // true：发布版本，false：测试版本。 控制bugly上报发布打开上报否则关闭上报
        environment = 1// 0:开发版本; 1:测试版本; 2:预发布版本; 3:v4线上版本
        isAllChannel = false
        println "environment2："+environment
    }
}

ext {
    env="no"
    if (environment == 0) {
        hostApply = "dev"
        env="dev"
    } else if (environment == 1) {
        hostApply = "https://v4-test.firstleap.cn/"
        env="test"
    } else if (environment == 2) {
        hostApply = "test"
        env="pre"
    } else {
        hostApply = "online"
        env="online"
    }
    println "host:" + hostApply
    println "v${versionName}-$versionCode-$env"
}
buildscript {
    ext.kotlin_version = '1.3.10'
    repositories {
        jcenter { url 'https://maven.aliyun.com/repository/jcenter' }
        google()
//        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        jcenter { url 'https://maven.aliyun.com/repository/jcenter' }
        google()
//        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
